rep(5,4)
library(mvtnorm)
install.packages('')
install.packages('mvtnorm')
mu <- c(0, 10)
Sig <- matrix(c(4, 10, 10, 100), 2, 2)
Sig
logit
pred <- function(x, n, y, par=par) {
logit <- 1/(1 + exp(- par[1] - par[2]*x))
logit^y*(1 - logit)^(n - y)
}
par = c(1,1)
pred(2, 5,1)
Pred <- function(x, n, y, par=par) {
logit <- 1/(1 + exp(- par[1] - par[2]*x))
logit^y*(1 - logit)^(n - y)
}
Pred(2,5,1)
Pred <- function(x, n, y, par) {
logit <- 1/(1 + exp(- par[1] - par[2]*x))
logit^y*(1 - logit)^(n - y)
}
Pred(2,5,1, par)
x = c(2,3)
1/(1 + exp(- par[1] - par[2]*x))
1/(1 + exp(- par[1] - par[2]*x))^y
y=c(2,3)
1/(1 + exp(- par[1] - par[2]*x))^y
n=c(5,5)
1/(1 + exp(- par[1] - par[2]*x))^(n-y)
log_posterior <- function(par) {
prod(link(par[1]+par[2]*x)^y*(1-link(par[1]+par[2]*x))^(n-y))
}
x <- c(-.86, -.3, -.05, .73)
n <- rep(5, 4)
y <- c(0, 1, 3, 5)
log_posterior(c(2,2))
link <- function(x) {
1/(1+exp(-x))
}
log_posterior(c(2,2))
log_posterior <- function(par) {
c(link(par[1]+par[2]*x)^y*(1-link(par[1]+par[2]*x))^(n-y))
}
}
log_posterior(c(2,2))
?rnorm
rnorm(0,1)
x <- c(-.86, -.3, -.05, .73)
n <- rep(5, 4)
y <- c(0, 1, 3, 5)
library(mvtnorm)
mu <- c(0, 10)
Sig <- matrix(c(4, 10, 10, 100), 2, 2)
link <- function(x) {
1/(1+exp(-x))
}
log_posterior <- function(alpha, beta) {
# x,n,y are given and fixed
par <- c(alpha, beta)
dmvnorm(par, mean=mu, sigma=Sig, log=T) + sum(log(link(par[1]+par[2]*x)^y*(1-link(par[1]+par[2]*x))^(n-y)))
}
iter <- 1e5
res <- matrix(nrow=iter+1, ncol=2)
res[1, ] <- c(0, 10) # init
for (i in 1:iter) {
temp_alpha <- rnorm(1, res[i, 1], 2) # proposal
log_ratio <- log_posterior(temp_alpha, res[i, 2]) -
log_posterior(res[i, 1], res[i, 2]) +
dnorm(temp_alpha, res[i, 1], 2, log=T) -
dnorm(res[i, 1], temp_alpha, 2, log=T)
temp_log_U <- log(runif(1))
if (temp_log_U <= log_ratio) {
res[i+1, 1] <- temp_alpha
} else {
res[i+1, 1] <- res[i, 1]
}
temp_beta <- rnorm(1, res[i, 2], 10) # proposal
log_ratio <- log_posterior(res[i+1, 1], temp_beta) -
log_posterior(res[i+1, 1], res[i, 2]) +
dnorm(temp_beta, res[i, 2], 10, log=T) -
dnorm(res[i, 2], temp_beta, 10, log=T)
temp_log_U <- log(runif(1))
if (temp_log_U <= log_ratio) {
res[i+1, 2] <- temp_beta
} else {
res[i+1, 2] <- res[i, 2]
}
}
plot(tail(res[, 1], 100), tail(res[, 2], 100))
plot(tail(res[, 1], 1000), tail(res[, 2], 1000))
plot(tail(res[, 1], 1000), tail(res[, 2], 1000))
library(ggplot2)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000))
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30))
seq(-2, 4, .01)
length(seq(-2, 4, .01))
ygrid <- seq(0, 30, .5)
length(ygrid)
library(ggplot2)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30))
xgrid <- seq(-2, 4, .01)
ygrid <- seq(0, 30, .05)
z <- matrix(nrow=length(xgrid), ncol=length(ygrid))
for (i in 1:length(xgrid)) {
for (j in 1:length(ygrid)) {
z[i, j] <- exp(log_posterior(xgrid[i], ygrid[j]))
}
}
plt_dat <- data.frame(x=xgrid, y=ygrid, z=z)
ggplot(data=plt_dat) + stat_contour(aes(x=x, y=y, z=z))
coutour(x=xgrid, y=ygrid, z=z)
contour(x=xgrid, y=ygrid, z=z)
library(ggplot2)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30))
xgrid <- seq(-2, 4, .01)
ygrid <- seq(0, 30, .05)
z <- matrix(nrow=length(xgrid), ncol=length(ygrid))
for (i in 1:length(xgrid)) {
for (j in 1:length(ygrid)) {
z[i, j] <- exp(log_posterior(xgrid[i], ygrid[j]))
}
}
contour(x=xgrid, y=ygrid, z=z)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30), pch=16)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30), pch=16, size=.1)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30), pch=16, cex=.1)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30), pch=16, cex=1)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000), xlim=c(-2, 4), ylim=c(0, 30), pch=16, cex=.5)
?contour
contour(x=xgrid, y=ygrid, z=z, drawlabels=F)
res
res[-1,]
res[-1222,]
res[-12222222222,]
res[-12222,]
a <- res[c(1:10),]
a
a[-1,]
a[-10,]
a[-1:10,]
a[-c(1:8),]
#LD50
res <- res[-c(1:1000), ]
ld50 <- -res[, 1]/res[, 2]
hist(ld50)
?hist
hist(ld50, breaks=50)
ld50 <- ld50[res[, 2] > 0]
hist(ld50, breaks=50)
library(ggplot2)
plot(tail(res[, 1], 1000), tail(res[, 2], 1000),
xlim=c(-2, 4), ylim=c(0, 30), pch=16, cex=.5,
main='Scatterplot of 1000 draws from the posterior')
xgrid <- seq(-2, 4, .01)
ygrid <- seq(0, 30, .05)
z <- matrix(nrow=length(xgrid), ncol=length(ygrid))
for (i in 1:length(xgrid)) {
for (j in 1:length(ygrid)) {
z[i, j] <- exp(log_posterior(xgrid[i], ygrid[j]))
}
}
contour(x=xgrid, y=ygrid, z=z, drawlabels=F, main='Contour plot for posterior density')
contour(x=xgrid, y=ygrid, z=z, drawlabels=F,
main='Contour plot for posterior density',
xlab='Alpha', ylab='Beta')
plot(tail(res[, 1], 1000), tail(res[, 2], 1000),
xlim=c(-2, 4), ylim=c(0, 30), pch=16, cex=.5,
main='Scatterplot of 1000 draws from the posterior',
xlab='Alpha', ylab='Beta')
